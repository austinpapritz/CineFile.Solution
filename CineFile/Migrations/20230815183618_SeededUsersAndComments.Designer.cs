// <auto-generated />
using System;
using CineFile.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CineFile.Migrations
{
    [DbContext(typeof(CineFileContext))]
    [Migration("20230815183618_SeededUsersAndComments")]
    partial class SeededUsersAndComments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CineFile.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DatePosted")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            CommentId = 1,
                            Content = "User1's comment on Matilda",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7332),
                            MovieId = 1,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 2,
                            Content = "User1's comment on Ironman",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7365),
                            MovieId = 2,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 3,
                            Content = "User1's comment on Edward Scissorhands",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7368),
                            MovieId = 3,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 4,
                            Content = "User1's comment on Pippy Longstocking",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7370),
                            MovieId = 4,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 5,
                            Content = "User1's comment on John Wick 2",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7372),
                            MovieId = 5,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 6,
                            Content = "User2's comment on Matilda",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7375),
                            MovieId = 1,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 7,
                            Content = "User2's comment on Ironman",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7377),
                            MovieId = 2,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 8,
                            Content = "User2's comment on Edward Scissorhands",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7379),
                            MovieId = 3,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 9,
                            Content = "User2's comment on Pippy Longstocking",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7381),
                            MovieId = 4,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 10,
                            Content = "User2's comment on John Wick 2",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7383),
                            MovieId = 5,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 11,
                            Content = "User3's comment on Matilda",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7385),
                            MovieId = 1,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 12,
                            Content = "User3's comment on Ironman",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7387),
                            MovieId = 2,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 13,
                            Content = "User3's comment on Edward Scissorhands",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7389),
                            MovieId = 3,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 14,
                            Content = "User3's comment on Pippy Longstocking",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7392),
                            MovieId = 4,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 15,
                            Content = "User3's comment on John Wick 3",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7394),
                            MovieId = 5,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 16,
                            Content = "User4's comment on Matilda",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7396),
                            MovieId = 1,
                            UserId = 4
                        },
                        new
                        {
                            CommentId = 17,
                            Content = "User4's comment on Ironman",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7398),
                            MovieId = 2,
                            UserId = 4
                        },
                        new
                        {
                            CommentId = 18,
                            Content = "User4's comment on Edward Scissorhands",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7400),
                            MovieId = 3,
                            UserId = 4
                        },
                        new
                        {
                            CommentId = 19,
                            Content = "User4's comment on Pippy Longstocking",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7402),
                            MovieId = 4,
                            UserId = 4
                        },
                        new
                        {
                            CommentId = 20,
                            Content = "User4's comment on John Wick 2",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7404),
                            MovieId = 5,
                            UserId = 4
                        },
                        new
                        {
                            CommentId = 21,
                            Content = "User5's comment on Matilda",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7406),
                            MovieId = 1,
                            UserId = 5
                        },
                        new
                        {
                            CommentId = 22,
                            Content = "User5's comment on Ironman",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7409),
                            MovieId = 2,
                            UserId = 5
                        },
                        new
                        {
                            CommentId = 23,
                            Content = "User5's comment on Edward Scissorhands",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7411),
                            MovieId = 3,
                            UserId = 5
                        },
                        new
                        {
                            CommentId = 24,
                            Content = "User5's comment on Pippy Longstocking",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7413),
                            MovieId = 4,
                            UserId = 5
                        },
                        new
                        {
                            CommentId = 25,
                            Content = "User5's comment on John Wick 2",
                            DatePosted = new DateTime(2023, 8, 15, 11, 36, 18, 519, DateTimeKind.Local).AddTicks(7415),
                            MovieId = 5,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("CineFile.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Genre = "Childrens",
                            Title = "Matilda"
                        },
                        new
                        {
                            MovieId = 2,
                            Genre = "Action",
                            Title = "Ironman"
                        },
                        new
                        {
                            MovieId = 3,
                            Genre = "Romance",
                            Title = "Edward Scissorhands"
                        },
                        new
                        {
                            MovieId = 4,
                            Genre = "Childrens",
                            Title = "Pippy Longstocking"
                        },
                        new
                        {
                            MovieId = 5,
                            Genre = "Action",
                            Title = "John Wick 2"
                        });
                });

            modelBuilder.Entity("CineFile.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Pasword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Pasword = "password123",
                            Username = "User1"
                        },
                        new
                        {
                            UserId = 2,
                            Pasword = "password123",
                            Username = "User2"
                        },
                        new
                        {
                            UserId = 3,
                            Pasword = "password123",
                            Username = "User3"
                        },
                        new
                        {
                            UserId = 4,
                            Pasword = "password123",
                            Username = "User4"
                        },
                        new
                        {
                            UserId = 5,
                            Pasword = "password123",
                            Username = "User5"
                        });
                });

            modelBuilder.Entity("CineFile.Models.Comment", b =>
                {
                    b.HasOne("CineFile.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CineFile.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CineFile.Models.User", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
